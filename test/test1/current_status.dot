strict digraph {
    subgraph cluster1 {
        label = <<u>fmt::{impl#2}</u>>
        color = green
        fontcolor = green

        "std::fmt::Arguments::<'a>::new_v1" [shape=none]
        "std::fmt::Arguments::<'a>::new_v1" [shape=none]
        "std::fmt::Arguments::new_v1" [label=""; fixedsize="false"; width=0; height=0; shape=none]
    }
    subgraph cluster2 {
        label = <<u>ops::function::Fn</u>>
        color = green
        fontcolor = green

        "std::ops::Fn::call" [shape=none]
        "std::ops::Fn::call" [shape=none]
        "<F as std::ops::Fn<()>>::call" [label=""; fixedsize="false"; width=0; height=0; shape=none]
    }
    subgraph cluster5 {
        label = <<u>crate_name</u>>
        color = none
        fontcolor = green

        "main" [shape=none]
    }
    subgraph cluster0 {
        label = <<u>m2</u>>
        color = green
        fontcolor = green

        "m2::bar" [shape=none]
        "m2::baz" [shape=none]
    }
    subgraph cluster3 {
        label = <<u>m1</u>>
        color = green
        fontcolor = green

        "m1::foo2" [shape=none]
        "m1::foo1" [shape=none]
        "m1::foo3" [shape=none]
        "m1::foo3" [shape=none]
        "m1::foo1" [shape=none]
        "m1::foo2" [shape=none]
        "m1::foo3::<fn() {m2::bar}>" [label=""; fixedsize="false"; width=0; height=0; shape=none]
        "m1::foo1::<fn() {m2::bar}>" [label=""; fixedsize="false"; width=0; height=0; shape=none]
        "m1::foo2::<F>" [label=""; fixedsize="false"; width=0; height=0; shape=none]
    }
    subgraph cluster4 {
        label = <<u>io::stdio</u>>
        color = green
        fontcolor = green

        "std::io::_print" [shape=none]
    }

    // dependency graph
    "main" -> "m1::foo3::<fn() {m2::bar}>" [arrowhead=none]
    "m1::foo3::<fn() {m2::bar}>" -> "m1::foo3"
    "m1::foo3" -> "m1::foo3::<fn() {m2::bar}>" [style=dotted; constraint=false; arrowhead=none]
    "main" -> "m1::foo1::<fn() {m2::bar}>" [arrowhead=none]
    "m1::foo1::<fn() {m2::bar}>" -> "m1::foo1"
    "m1::foo1" -> "m1::foo1::<fn() {m2::bar}>" [style=dotted; constraint=false; arrowhead=none]
    "m1::foo1" -> "m1::foo2::<F>" [arrowhead=none]
    "m1::foo2::<F>" -> "m1::foo2"
    "m1::foo2" -> "m1::foo2::<F>" [style=dotted; constraint=false; arrowhead=none]
    "m1::foo2" -> "<F as std::ops::Fn<()>>::call" [arrowhead=none]
    "<F as std::ops::Fn<()>>::call" -> "std::ops::Fn::call"
    "std::ops::Fn::call" -> "<F as std::ops::Fn<()>>::call" [style=dotted; constraint=false; arrowhead=none]
    "m1::foo3" -> "m1::foo2::<F>" [arrowhead=none]
    "m1::foo2::<F>" -> "m1::foo2"
    "m1::foo2" -> "m1::foo2::<F>" [style=dotted; constraint=false; arrowhead=none]
    "m2::bar" -> "m2::baz"
    "m2::baz" -> "std::fmt::Arguments::new_v1" [arrowhead=none]
    "std::fmt::Arguments::new_v1" -> "std::fmt::Arguments::<'a>::new_v1"
    "std::fmt::Arguments::<'a>::new_v1" -> "std::fmt::Arguments::new_v1" [style=dotted; constraint=false; arrowhead=none]
    "m2::baz" -> "std::io::_print"
}
